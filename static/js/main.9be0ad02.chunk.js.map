{"version":3,"sources":["fbInstance.jsx","components/EditMessage.jsx","components/Message.jsx","components/MessageFactory.jsx","routes/Home.jsx","components/AuthForm.jsx","routes/Auth.jsx","components/Navigation.jsx","routes/Profile.jsx","components/Router.jsx","components/Footer.jsx","components/App.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","EditMessage","msgObj","toggleHandler","useState","text","newMsg","setNewMsg","newImage","setNewImage","imageClear","deleteExistImage","a","window","confirm","imageUrl","refFromURL","delete","doc","id","update","onSubmit","e","preventDefault","imageRef","ref","child","creatorId","uuid","putString","response","console","log","getDownloadURL","className","type","placeholder","value","onChange","target","required","src","width","height","style","borderRadius","onClick","icon","faTimes","size","faTrashAlt","for","faPlus","marginLeft","accept","file","files","reader","FileReader","onloadend","finishedevent","result","readAsDataURL","Message","isOwner","edit","setEdit","onDeleteClick","marginRight","faEdit","MessageFactory","userObj","msg","setMsg","image","setImage","uid","alert","createdAt","Date","now","collection","add","maxLength","Home","msgs","setMsgs","useEffect","orderBy","onSnapshot","snapshot","msgArray","docs","map","data","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Form","Alert","color","FormGroup","Label","Input","Button","block","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Col","sm","md","offset","faAt","Card","CardBody","CardFooter","faGoogle","faGithub","Navigation","isOpen","setIsOpen","history","useHistory","Navbar","dark","expand","Container","to","NavbarToggler","Collapse","navbar","Nav","photoURL","displayName","signOut","push","Profile","refreshUser","newDisplayName","setNewDisplayName","search","updateProfile","AppRouter","isLoggedIn","withProps","Component","props","matchProps","path","exact","component","from","Footer","Row","getFullYear","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","App","document","getElementById"],"mappings":"4PAcAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKT,IACeM,EADUT,IAGZU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,gDC6IxBC,EA3JK,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cAAoB,EACrBC,mBAASF,EAAOG,MADK,mBAC1CC,EAD0C,KAClCC,EADkC,OAEjBH,mBAAS,IAFQ,mBAE1CI,EAF0C,KAEhCC,EAFgC,KAI3CC,EAAa,kBAAMD,EAAY,KAE/BE,EAAgB,uCAAG,sBAAAC,EAAA,0DACTC,OAAOC,QACnB,iDAFqB,mBAKG,KAApBZ,EAAOa,SALU,gCAMbhB,EAAeiB,WAAWd,EAAOa,UAAUE,SAN9B,uBAObpB,EAAUqB,IAAV,iBAAwBhB,EAAOiB,KAAMC,OAAO,CAChDL,SAAU,KARO,2CAAH,qDAuChBM,EAAQ,uCAAG,WAAMC,GAAN,mBAAAV,EAAA,yDACfU,EAAEC,iBACER,EAAW,GACE,KAAbP,EAHW,wBAIPgB,EAAWzB,EACd0B,MACAC,MAFc,UAELxB,EAAOyB,UAFF,YAEeC,QANnB,SAOUJ,EAASK,UAAUrB,EAAU,YAPvC,cAOPsB,EAPO,OAQbC,QAAQC,IAAIF,EAAU,YART,UASIA,EAASL,IAAIQ,iBATjB,QASblB,EATa,kBAYXb,EAAOG,OAASC,IAAUE,EAZf,oBAaI,KAAbO,EAbS,oBAca,KAApBb,EAAOa,SAdA,kCAgBHhB,EAAeiB,WAAWd,EAAOa,UAAUE,SAhBxC,yBAmBLpB,EAAUqB,IAAV,iBAAwBhB,EAAOiB,KAAMC,OAAO,CAChDf,KAAMC,EACNS,aArBS,QAuBXL,IAvBW,yCAyBLb,EAAUqB,IAAV,iBAAwBhB,EAAOiB,KAAMC,OAAO,CAChDf,KAAMC,IA1BG,QA+BfH,IA/Be,4CAAH,sDAkCd,OACE,mCACE,sBAAK+B,UAAU,iBAAf,UACE,uBAAMb,SAAUA,EAAUa,UAAU,cAApC,UACE,uBACEC,KAAK,OACLC,YAAY,oBACZC,MAAO/B,EACPgC,SAnEO,SAAAhB,GAAM,IAETe,EACRf,EADFiB,OAAUF,MAEZ9B,EAAU8B,IAgEFG,UAAQ,EACRN,UAAU,iBAEX1B,EACC,mCACE,sBAAK0B,UAAU,eAAf,UACE,qBACEO,IAAKjC,EACLkC,MAAM,OACNC,OAAO,OACPC,MAAO,CAAEC,aAAc,QACvBX,UAAU,cAEZ,uBAAMY,QAASpC,EAAf,sBAEE,cAAC,IAAD,CACEqC,KAAMC,IACNC,KAAK,KACLf,UAAU,uBAMlBhC,EAAOa,UACL,mCACE,sBAAKmB,UAAU,eAAf,UACE,qBACEO,IAAKvC,EAAOa,SACZ2B,MAAM,OACNC,OAAO,OACPC,MAAO,CAAEC,aAAc,UAEzB,uBAAMC,QAASnC,EAAf,wBAEE,cAAC,IAAD,CACEoC,KAAMG,IACND,KAAK,KACLf,UAAU,uBAOtB,sBAAKA,UAAU,aAAf,UACE,wBAAOiB,IAAI,eAAejB,UAAU,qBAApC,UACE,8CACA,cAAC,IAAD,CAAiBa,KAAMK,IAAQR,MAAO,CAAES,WAAY,aAEtD,uBACElC,GAAG,eACHgB,KAAK,OACLmB,OAAO,UACPhB,SAnHS,SAAAhB,GAAM,IAInBiC,EADFjC,EADFiB,OAAUiB,MAEO,GACbC,EAAS,IAAIC,WAEnBD,EAAOE,UAAY,SAAAC,GAAkB,IAEvBC,EACRD,EADFrB,OAAUsB,OAEZ9B,QAAQC,IAAI6B,EAAQ,UACpBpD,EAAYoD,IAGdJ,EAAOK,cAAcP,IAqGXrB,UAAU,kBAId,uBAAOC,KAAK,SAASE,MAAM,SAASH,UAAU,qBAEhD,wBAAQY,QAAS3C,EAAjB,0BC9FO4D,EAvDC,SAAC,GAAyB,IAAvB7D,EAAsB,EAAtBA,OAAQ8D,EAAc,EAAdA,QAAc,EACf5D,oBAAS,GADM,mBAChC6D,EADgC,KAC1BC,EAD0B,KAGjCC,EAAa,uCAAG,sBAAAvD,EAAA,0DACNC,OAAOC,QACnB,iDAFkB,mBAOM,KAApBZ,EAAOa,SAPO,gCAQVhB,EAAeiB,WAAWd,EAAOa,UAAUE,SARjC,uBAWZpB,EAAUqB,IAAV,iBAAwBhB,EAAOiB,KAAMF,SAXzB,2CAAH,qDAebd,EAAgB,kBAAM+D,GAASD,IAErC,OACE,mCACE,qBAAK/B,UAAU,gBAAf,SACG+B,EACC,cAAC,EAAD,CAAa/D,OAAQA,EAAQC,cAAeA,IAE5C,mCACE,sBAAK+B,UAAU,eAAf,UACE,6BAAKhC,EAAOG,OACXH,EAAOa,UACN,qBAAK0B,IAAKvC,EAAOa,SAAU2B,MAAM,OAAOC,OAAO,SAEhDqB,GACC,sBAAK9B,UAAU,iBAAf,UACE,cAAC,IAAD,CACEa,KAAMG,IACNJ,QAASqB,EACTvB,MAAO,CAAEwB,YAAa,OACtBnB,KAAK,OAEP,cAAC,IAAD,CACEF,KAAMsB,IACNvB,QAAS3C,EACT8C,KAAK,oBCmDVqB,EA/FQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAChBnE,mBAAS,IADO,mBAC/BoE,EAD+B,KAC1BC,EAD0B,OAEZrE,mBAAS,IAFG,mBAE/BsE,EAF+B,KAExBC,EAFwB,KA0BhCjE,EAAa,kBAAMiE,EAAS,KAE5BtD,EAAQ,uCAAG,WAAMC,GAAN,qBAAAV,EAAA,yDACfU,EAAEC,iBACER,EAAW,GACD,KAAV2D,EAHW,wBAKPlD,EAAWzB,EAAe0B,MAAMC,MAArB,UAA8B6C,EAAQK,IAAtC,YAA6ChD,QALjD,SAMUJ,EAASK,UAAU6C,EAAO,YANpC,cAMP5C,EANO,OAObC,QAAQC,IAAIF,GAPC,UAQIA,EAASL,IAAIQ,iBARjB,QAQblB,EARa,kBAWH,KAARyD,EAXW,0CAYNK,MAAM,2BAZA,eAcP3E,EAAS,CACbG,KAAMmE,EACNM,UAAWC,KAAKC,MAChBrD,UAAW4C,EAAQK,IACnB7D,YAlBW,UAoBPlB,EAAUoF,WAAW,UAAUC,IAAIhF,GApB5B,QAqBbuE,EAAO,IACP/D,IAtBa,4CAAH,sDA0Bd,OACE,mCACE,uBAAMW,SAAUA,EAAUa,UAAU,iBAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,gBACVC,KAAK,OACLE,MAAOmC,EACPpC,YAAY,uBACZE,SA3DO,SAAAhB,GAAM,IAETe,EACRf,EADFiB,OAAUF,MAEZoC,EAAOpC,IAwDC8C,UAAW,MAEb,uBAAOhD,KAAK,SAASE,MAAM,OAAOH,UAAU,oBAG9C,wBAAOiB,IAAI,eAAejB,UAAU,kBAApC,UACE,6CAEA,cAAC,IAAD,CAAiBa,KAAMK,IAAQR,MAAO,CAAES,WAAY,aAEtD,uBACElC,GAAG,eACHgB,KAAK,OACLmB,OAAO,UACPhB,SAnEa,SAAAhB,GAAM,IAInBiC,EADFjC,EADFiB,OAAUiB,MAEO,GACbC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAAAC,GAAkB,IAEvBC,EACRD,EADFrB,OAAUsB,OAEZc,EAASd,IAEXJ,EAAOK,cAAcP,MA0DhBmB,GACC,sBAAKxC,UAAU,gBAAf,UACE,qBAAKO,IAAKiC,EAAOhC,MAAM,OAAOC,OAAO,SACrC,uBAAMG,QAASpC,EAAf,wBAEE,cAAC,IAAD,CAAiBqC,KAAMC,IAASd,UAAU,2BCrCzCkD,EAjDF,SAAC,GAAiB,IAAfb,EAAc,EAAdA,QAAc,EACJnE,mBAAS,IADL,mBACrBiF,EADqB,KACfC,EADe,KAkC5B,OAhBAC,qBAAU,WAGR1F,EACGoF,WAAW,UACXO,QAAQ,YAAa,QACrBC,YAAW,SAAAC,GACV3D,QAAQC,IAAI,WAAY0D,GACxB,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAAA3E,GAEjC,OADAa,QAAQC,IAAId,GACL,aAAEC,GAAID,EAAIC,IAAOD,EAAI4E,WAE9BR,EAAQK,QAEX,IAGD,qCACE,cAAC,EAAD,CAAgBpB,QAASA,IACzB,qBAAKrC,UAAU,qBAAf,SACGmD,EAAKQ,KAAI,SAAArB,GAAG,OACX,cAAC,EAAD,CAEEtE,OAAQsE,EACRR,QAASQ,EAAI7C,YAAc4C,EAAQK,KAF9BJ,EAAIrD,a,gFCuCN4E,EAjFE,WAAO,IAAD,EACK3F,mBAAS,IADd,mBACd4F,EADc,KACPC,EADO,OAEW7F,mBAAS,IAFpB,mBAEd8F,EAFc,KAEJC,EAFI,OAGe/F,oBAAS,GAHxB,mBAGdgG,EAHc,KAGFC,EAHE,OAIKjG,mBAAS,IAJd,mBAIdkG,EAJc,KAIPC,EAJO,KAMfjE,EAAW,SAAAhB,GAAM,IAAD,EAGhBA,EADFiB,OAAUiE,EAFQ,EAERA,KAAMnE,EAFE,EAEFA,MAEL,UAATmE,EACFP,EAAS5D,GACS,aAATmE,GACTL,EAAY9D,IAIVhB,EAAQ,uCAAG,WAAMC,GAAN,eAAAV,EAAA,yDACfU,EAAEC,iBADa,UAIT6E,EAJS,gCAMEzG,EAAY8G,+BACvBT,EACAE,GARS,OAMXJ,EANW,+CAYEnG,EAAY+G,2BAA2BV,EAAOE,GAZhD,QAYXJ,EAZW,eAcb/D,QAAQC,IAAI8D,GAdC,kDAgBb/D,QAAQuE,MAAR,MACAC,EAAS,KAAMI,SAjBF,0DAAH,sDAsBd,OACE,mCACE,eAACC,EAAA,EAAD,CAAMvF,SAAUA,EAAhB,UACGiF,EAAQ,cAACO,EAAA,EAAD,CAAOC,MAAM,SAAb,SAAuBR,IAAiB,GACjD,eAACS,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAO7D,IAAI,QAAX,mBACA,cAAC8D,EAAA,EAAD,CACE9E,KAAK,QACLqE,KAAK,QACLrF,GAAG,QACHkB,MAAO2D,EACP9D,UAAU,oBACVM,UAAQ,EACRF,SAAUA,OAGd,eAACyE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAO7D,IAAI,QAAX,sBACA,cAAC8D,EAAA,EAAD,CACE9E,KAAK,WACLqE,KAAK,WACLrF,GAAG,WACHkB,MAAO6D,EACPhE,UAAU,eACVM,UAAQ,EACRF,SAAUA,OAId,cAAC4E,EAAA,EAAD,CAAQC,OAAK,EAACjF,UAAU,cAAxB,SACGkE,EAAa,iBAAmB,UAEnC,qBAAKlE,UAAU,cAAf,SACE,sBAAMY,QAlCQ,kBAAMuD,GAAeD,IAkCnC,SACGA,EAAa,UAAY,2B,QCRvBgB,EA5DF,WACX,IAAMC,EAAa,uCAAG,WAAM/F,GAAN,mBAAAV,EAAA,4DAKP,YAHD4F,EACRlF,EADFiB,OAAUiE,MAIVc,EAAW,IAAI5H,EAAiBE,KAAK2H,mBACnB,WAATf,IACTc,EAAW,IAAI5H,EAAiBE,KAAK4H,oBARnB,SAUD7H,EAAY8H,gBAAgBH,GAV3B,OAUdxB,EAVc,OAWpB/D,QAAQC,IAAI8D,GAXQ,2CAAH,sDAcnB,OACE,mCACE,qBAAK5D,UAAU,kBAAf,SACE,eAACwF,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,CAAE3E,KAAM,EAAG4E,OAAQ,GAApC,UACE,qBAAK3F,UAAU,YAAf,SACE,iCACE,cAAC,IAAD,CAAiBa,KAAM+E,IAAM7E,KAAK,OADpC,cAMF,eAAC8E,EAAA,EAAD,WAIE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,MAEF,eAACC,EAAA,EAAD,WACE,eAACf,EAAA,EAAD,CACEC,OAAK,EACLX,KAAK,SACLtE,UAAU,OACVY,QAASuE,EAJX,sCAOE,cAAC,IAAD,CAAiBtE,KAAMmF,SAEzB,eAAChB,EAAA,EAAD,CACEC,OAAK,EACLX,KAAK,SACLtE,UAAU,OACVY,QAASuE,EAJX,0CAOE,cAAC,IAAD,CAAiBtE,KAAMoF,uB,wCCCxBC,EApDI,SAAC,GAAiB,IAAf7D,EAAc,EAAdA,QAAc,EACNnE,oBAAS,GADH,mBAC3BiI,EAD2B,KACnBC,EADmB,KAE5BC,EAAUC,cAWhB,OACE,mCACE,cAACC,EAAA,EAAD,CAAQ3B,MAAM,OAAO4B,MAAI,EAACC,OAAO,KAAKzG,UAAU,aAAhD,SACE,eAAC0G,EAAA,EAAD,WACE,eAAC,IAAD,CAAMC,GAAG,IAAI3G,UAAU,kCAAvB,UACE,cAAC,IAAD,CAAiBa,KAAM+E,IAAM7E,KAAK,OAClC,sBAAMf,UAAU,OAAhB,uBAEF,cAAC4G,EAAA,EAAD,CAAehG,QAZF,WACnBwF,GAAWD,IAWiCnG,UAAU,SAChD,cAAC6G,EAAA,EAAD,CAAUjC,MAAM,QAAQuB,OAAQA,EAAQW,QAAM,EAA9C,SACE,eAACC,EAAA,EAAD,CACE/G,UAAU,oEACV8G,QAAM,EAFR,UAIE,eAAC,IAAD,CAAMH,GAAG,WAAW3G,UAAU,kCAA9B,UACE,qBACEO,IAAK8B,EAAQ2E,SACbxG,MAAM,OACNC,OAAO,OACPC,MAAO,CAAEC,aAAc,SACtB,IANL,OAQE,8BAAI0B,EAAQ4E,YAAZ,mBAGF,mBACEjH,UAAU,SACVY,QApCQ,WACpBnD,EAAYyJ,UACZb,EAAQc,KAAK,MAmCDzG,MAAO,CAAEkE,MAAO,SAHlB,kCCkGCwC,EA1IC,SAAC,GAA8B,IAA5B/E,EAA2B,EAA3BA,QAASgF,EAAkB,EAAlBA,YAAkB,EACAnJ,mBAASmE,EAAQ4E,aADjB,mBACrCK,EADqC,KACrBC,EADqB,OAElBrJ,mBAAS,IAFS,mBAErCsE,EAFqC,KAE9BC,EAF8B,KA+BtCtD,EAAQ,uCAAG,WAAMC,GAAN,mBAAAV,EAAA,yDACfU,EAAEC,iBACER,EAAW,GACD,KAAV2D,EAHW,wBAKPlD,EAAWzB,EACd0B,MACAC,MAFc,UAEL6C,EAAQK,IAFH,oBAEkBhD,QAPtB,SAQUJ,EAASK,UAAU6C,EAAO,YARpC,cAQP5C,EARO,OASbC,QAAQC,IAAIF,GATC,UAUIA,EAASL,IAAIQ,iBAVjB,QAUblB,EAVa,kBAYfgB,QAAQC,IAAIuC,EAAQ2E,SAAU,YAG1B3E,EAAQ4E,cAAgBK,IAAkB9E,EAf/B,oBAgBI,KAAb3D,EAhBS,sBAkBY,OAArBwD,EAAQ2E,UACR3E,EAAQ2E,SAASQ,OAAO,YAAc,GAnB7B,kCAqBH3J,EAAeiB,WAAWuD,EAAQ2E,UAAUjI,SArBzC,eAuBXc,QAAQC,IAAI,qBAAOjB,GAvBR,UAwBLwD,EAAQoF,cAAc,CAC1BR,YAAaK,EACbN,SAAUnI,IA1BD,iDA6BLwD,EAAQoF,cAAc,CAC1BR,YAAaK,IA9BJ,QAiCbD,IAjCa,4CAAH,sDAqDd,OACE,mCACE,qBAAKrH,UAAU,oBAAf,SACE,uBAAMb,SAAUA,EAAUa,UAAU,UAApC,UACE,qBAAKA,UAAU,QAAf,SACGwC,EACC,sBAAKvD,GAAG,QAAR,UACE,qBACEsB,IAAKiC,EACLhC,MAAM,QACNC,OAAO,QACPC,MAAO,CAAEC,aAAc,OACvBX,UAAU,cAEZ,uBAAMY,QArED,kBAAM6B,EAAS,KAqEpB,wBAEE,cAAC,IAAD,CAAiB5B,KAAMC,IAASd,UAAU,qBAI9C,8BACE,qBACEO,IAAK8B,EAAQ2E,SACbxG,MAAM,QACNC,OAAO,QACPC,MAAO,CAAEC,aAAc,aAM/B,uBACEV,KAAK,OACLC,YAAY,eACZC,MAAOmH,EACPlH,SAnHO,SAAAhB,GAAM,IAETe,EACRf,EADFiB,OAAUF,MAEZoH,EAAkBpH,MAiHZ,wBAAOc,IAAI,YAAYjB,UAAU,kBAAjC,UACE,gDACA,cAAC,IAAD,CAAiBa,KAAMK,IAAQR,MAAO,CAAES,WAAY,aAEtD,uBACElC,GAAG,YACHgB,KAAK,OACLmB,OAAO,UACPhB,SAtHW,SAAAhB,GAAM,IAInBiC,EADFjC,EADFiB,OAAUiB,MAEO,GACbC,EAAS,IAAIC,WAEnBD,EAAOE,UAAY,SAAAC,GAAkB,IAEvBC,EACRD,EADFrB,OAAUsB,OAEZ9B,QAAQC,IAAI6B,EAAQ,UACpBc,EAASd,IAGXJ,EAAOK,cAAcP,IAwGbrB,UAAU,eAEZ,uBAAOC,KAAK,SAASE,MAAM,SAASH,UAAU,0BClFzC0H,EA3CG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYN,EAA2B,EAA3BA,YAAahF,EAAc,EAAdA,QACtCuF,EAAY,SAACC,EAAWC,GAC5B,OAAO,SAAAC,GACL,OAAO,cAACF,EAAD,2BAAeC,GAAWC,MAIrC,OACE,eAAC,IAAD,WACGJ,GAAc,cAAC,EAAD,CAAYtF,QAASA,IACpC,qBAAKpD,GAAG,YAAR,SACE,cAACyH,EAAA,EAAD,CAAWzH,GAAG,YAAd,SACE,cAAC,IAAD,UACG0I,EACC,qCACE,cAAC,IAAD,CACEK,KAAK,IACLC,OAAK,EACLC,UAAWN,EAAU1E,EAAM,CAAEb,QAASA,MAExC,cAAC,IAAD,CACE2F,KAAK,WACLC,OAAK,EACLC,UAAWN,EAAUR,EAAS,CAC5B/E,QAASA,EACTgF,YAAaA,SAMnB,qCACE,cAAC,IAAD,CAAOW,KAAK,IAAIC,OAAK,EAACC,UAAWhD,IACjC,cAAC,IAAD,CAAUiD,KAAK,IAAIxB,GAAG,mB,QCxBvByB,EAnBA,WAMb,OACE,qBAAKnJ,GAAG,cAAce,UAAU,kBAAhC,SACE,cAACqI,EAAA,EAAD,UACE,cAAC7C,EAAA,EAAD,UACE,gDACmB,gCATZ,IAAI3C,MAAOyF,gBAQlB,qBCPK,aAAO,IAAD,EACKpK,oBAAS,GADd,mBACZqK,EADY,KACNC,EADM,OAGWtK,mBAAS,MAHpB,mBAGZmE,EAHY,KAGHoG,EAHG,KAKnBpF,qBAAU,WACR5F,EAAYiL,oBAAmB,SAAAC,GACzBA,GACF9I,QAAQC,IAAI6I,GAEZF,EAAW,CACTxB,YAAa0B,EAAK1B,YAClBvE,IAAKiG,EAAKjG,IACVsE,SAAU2B,EAAK3B,SACfS,cAAe,SAAAmB,GAAI,OAAID,EAAKlB,cAAcmB,OAG5CH,EAAW,MAIbD,GAAQ,QAET,IAYH,OACE,qCACGD,EACC,cAAC,EAAD,CACEZ,WAAYkB,QAAQxG,GACpBgF,YAfY,WAClB,IAAMsB,EAAOlL,EAAYqL,YACzBL,EAAW,CACTxB,YAAa0B,EAAK1B,YAClBvE,IAAKiG,EAAKjG,IACVsE,SAAU2B,EAAK3B,SACfS,cAAe,SAAAmB,GAAI,OAAID,EAAKlB,cAAcmB,OAUtCvG,QAASA,IAGX,mBAEF,cAAC,EAAD,QC9CN0G,IAASC,OAAO,cAACC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9be0ad02.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst firebaseInstance = firebase;\nexport default firebaseInstance;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from 'react';\nimport uuid from 'uuid/dist/v4';\nimport { dbService, storageService } from '../fbInstance';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\n\nconst EditMessage = ({ msgObj, toggleHandler }) => {\n  const [newMsg, setNewMsg] = useState(msgObj.text);\n  const [newImage, setNewImage] = useState('');\n\n  const imageClear = () => setNewImage('');\n\n  const deleteExistImage = async () => {\n    const check = window.confirm(\n      'Are you sure you want to delete this message?'\n    );\n    if (check) {\n      if (msgObj.imageUrl !== '') {\n        await storageService.refFromURL(msgObj.imageUrl).delete();\n        await dbService.doc(`aweets/${msgObj.id}`).update({\n          imageUrl: '',\n        });\n      }\n    }\n  };\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e;\n    setNewMsg(value);\n  };\n\n  const onFileChange = e => {\n    const {\n      target: { files },\n    } = e;\n    const file = files[0];\n    const reader = new FileReader();\n    // This event occurs when the read file action finished (2)\n    reader.onloadend = finishedevent => {\n      const {\n        target: { result },\n      } = finishedevent;\n      console.log(result, 'result');\n      setNewImage(result);\n    };\n    // Read file from specific URL (1)\n    reader.readAsDataURL(file);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    let imageUrl = '';\n    if (newImage !== '') {\n      const imageRef = storageService\n        .ref()\n        .child(`${msgObj.creatorId}/${uuid()}`);\n      const response = await imageRef.putString(newImage, 'data_url');\n      console.log(response, 'response');\n      imageUrl = await response.ref.getDownloadURL();\n    }\n\n    if (msgObj.text !== newMsg || newImage) {\n      if (imageUrl !== '') {\n        if (msgObj.imageUrl !== '') {\n          // delete previous imagefile in the storage\n          await storageService.refFromURL(msgObj.imageUrl).delete();\n        }\n\n        await dbService.doc(`aweets/${msgObj.id}`).update({\n          text: newMsg,\n          imageUrl,\n        });\n        imageClear();\n      } else {\n        await dbService.doc(`aweets/${msgObj.id}`).update({\n          text: newMsg,\n        });\n      }\n    }\n\n    toggleHandler();\n  };\n\n  return (\n    <>\n      <div className=\"message-update\">\n        <form onSubmit={onSubmit} className=\"update-form\">\n          <input\n            type=\"text\"\n            placeholder=\"Edit your message\"\n            value={newMsg}\n            onChange={onChange}\n            required\n            className=\"update-input\"\n          />\n          {newImage ? (\n            <>\n              <div className=\"image-exists\">\n                <img\n                  src={newImage}\n                  width=\"50px\"\n                  height=\"50px\"\n                  style={{ borderRadius: '20px' }}\n                  className=\"new-image\"\n                />\n                <span onClick={imageClear}>\n                  Undo &nbsp;\n                  <FontAwesomeIcon\n                    icon={faTimes}\n                    size=\"xs\"\n                    className=\"clear-icon\"\n                  />\n                </span>\n              </div>\n            </>\n          ) : (\n            msgObj.imageUrl && (\n              <>\n                <div className=\"image-exists\">\n                  <img\n                    src={msgObj.imageUrl}\n                    width=\"50px\"\n                    height=\"50px\"\n                    style={{ borderRadius: '20px' }}\n                  />\n                  <span onClick={deleteExistImage}>\n                    Delete &nbsp;\n                    <FontAwesomeIcon\n                      icon={faTrashAlt}\n                      size=\"xs\"\n                      className=\"clear-icon\"\n                    />\n                  </span>\n                </div>\n              </>\n            )\n          )}\n          <div className=\"edit-image\">\n            <label for=\"image-update\" className=\"image-update-label\">\n              <span>Edit photo</span>\n              <FontAwesomeIcon icon={faPlus} style={{ marginLeft: '10px' }} />\n            </label>\n            <input\n              id=\"image-update\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={onFileChange}\n              className=\"file-input\"\n            />\n          </div>\n\n          <input type=\"submit\" value=\"Update\" className=\"update-button\" />\n        </form>\n        <button onClick={toggleHandler}>Cancel</button>\n      </div>\n    </>\n  );\n};\n\nexport default EditMessage;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from '../fbInstance';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faEdit } from '@fortawesome/free-regular-svg-icons';\n\nimport EditMessage from './EditMessage';\n\nconst Message = ({ msgObj, isOwner }) => {\n  const [edit, setEdit] = useState(false);\n\n  const onDeleteClick = async () => {\n    const check = window.confirm(\n      'Are you sure you want to delete this message?'\n    );\n\n    if (check) {\n      // delete attachment\n      if (msgObj.imageUrl !== '') {\n        await storageService.refFromURL(msgObj.imageUrl).delete();\n      }\n      // delete message\n      await dbService.doc(`aweets/${msgObj.id}`).delete();\n    }\n  };\n\n  const toggleHandler = () => setEdit(!edit);\n\n  return (\n    <>\n      <div className=\"messages-body\">\n        {edit ? (\n          <EditMessage msgObj={msgObj} toggleHandler={toggleHandler} />\n        ) : (\n          <>\n            <div className=\"message-item\">\n              <h3>{msgObj.text}</h3>\n              {msgObj.imageUrl && (\n                <img src={msgObj.imageUrl} width=\"50px\" height=\"50px\" />\n              )}\n              {isOwner && (\n                <div className=\"message-option\">\n                  <FontAwesomeIcon\n                    icon={faTrashAlt}\n                    onClick={onDeleteClick}\n                    style={{ marginRight: '5px' }}\n                    size=\"xs\"\n                  />\n                  <FontAwesomeIcon\n                    icon={faEdit}\n                    onClick={toggleHandler}\n                    size=\"xs\"\n                  />\n                </div>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Message;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from '../fbInstance';\nimport uuid from 'uuid/dist/v4';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst MessageFactory = ({ userObj }) => {\n  const [msg, setMsg] = useState('');\n  const [image, setImage] = useState('');\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e;\n    setMsg(value);\n  };\n\n  const onFileChange = e => {\n    const {\n      target: { files },\n    } = e;\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onloadend = finishedevent => {\n      const {\n        target: { result },\n      } = finishedevent;\n      setImage(result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const imageClear = () => setImage('');\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    let imageUrl = '';\n    if (image !== '') {\n      // store attachment in the fire storage\n      const imageRef = storageService.ref().child(`${userObj.uid}/${uuid()}`);\n      const response = await imageRef.putString(image, 'data_url');\n      console.log(response);\n      imageUrl = await response.ref.getDownloadURL();\n    }\n\n    if (msg === '') {\n      return alert('Please write anything!');\n    } else {\n      const msgObj = {\n        text: msg,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        imageUrl,\n      };\n      await dbService.collection('aweets').add(msgObj);\n      setMsg('');\n      imageClear();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"create-message\">\n        <div className=\"message-input-container\">\n          <input\n            className=\"message-input\"\n            type=\"text\"\n            value={msg}\n            placeholder=\"What's on your mind?\"\n            onChange={onChange}\n            maxLength={120}\n          />\n          <input type=\"submit\" value=\"post\" className=\"message-post\" />\n        </div>\n\n        <label for=\"attach-image\" className=\"image-add-label\">\n          <span>Add photo</span>\n\n          <FontAwesomeIcon icon={faPlus} style={{ marginLeft: '10px' }} />\n        </label>\n        <input\n          id=\"attach-image\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n        />\n\n        {image && (\n          <div className=\"image-display\">\n            <img src={image} width=\"80px\" height=\"80px\" />\n            <span onClick={imageClear}>\n              Remove &nbsp;\n              <FontAwesomeIcon icon={faTimes} className=\"clear-icon\" />\n            </span>\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\n\nexport default MessageFactory;\n","import React, { useEffect, useState } from 'react';\nimport Message from '../components/Message';\nimport { dbService, storageService } from '../fbInstance';\n\nimport MessageFactory from '../components/MessageFactory';\n\nconst Home = ({ userObj }) => {\n  const [msgs, setMsgs] = useState([]);\n\n  /*\n  // old way\n  const getMsgs = async () => {\n    const data = await dbService.collection('aweets').get();\n    data.forEach(doc => {\n      const msgObject = {\n        ...doc.data(),\n        id: doc.id,\n      };\n      setMsgs(prev => [msgObject, ...prev]);\n    });\n  };\n\n  console.log(msgs);\n*/\n  useEffect(() => {\n    // getMsgs();\n    // new way!! (database listener)\n    dbService\n      .collection('aweets')\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(snapshot => {\n        console.log('snapshot', snapshot);\n        const msgArray = snapshot.docs.map(doc => {\n          console.log(doc);\n          return { id: doc.id, ...doc.data() };\n        });\n        setMsgs(msgArray);\n      });\n  }, []);\n\n  return (\n    <>\n      <MessageFactory userObj={userObj} />\n      <div className=\"messages-container\">\n        {msgs.map(msg => (\n          <Message\n            key={msg.id}\n            msgObj={msg}\n            isOwner={msg.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\nexport default Home;\n","import React, { useState } from 'react';\nimport { Alert, Form, FormGroup, Input, Label, Button } from 'reactstrap';\nimport { authService } from '../fbInstance';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = e => {\n    const {\n      target: { name, value },\n    } = e;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        //Create Account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // Login\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n      setError(error.message);\n    }\n  };\n\n  const toggleHandler = () => setNewAccount(!newAccount);\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        {error ? <Alert color=\"danger\">{error}</Alert> : ''}\n        <FormGroup>\n          <Label for=\"title\">Email</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={email}\n            className=\"form-control mb-2\"\n            required\n            onChange={onChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"title\">Password</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            className=\"form-control\"\n            required\n            onChange={onChange}\n          />\n        </FormGroup>\n\n        <Button block className=\"mt-4 create\">\n          {newAccount ? 'Create Account' : 'Login'}\n        </Button>\n        <div className=\"toggle-auth\">\n          <span onClick={toggleHandler}>\n            {newAccount ? 'Sign In' : 'Create Account'}\n          </span>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { Card, CardBody, CardFooter, Col, Button } from 'reactstrap';\nimport AuthForm from '../components/AuthForm';\nimport firebaseInstance, { authService } from '../fbInstance';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst Auth = () => {\n  const onSocialClick = async e => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <>\n      <div className=\"login-container\">\n        <Col sm=\"12\" md={{ size: 4, offset: 4 }}>\n          <div className=\"main-icon\">\n            <span>\n              <FontAwesomeIcon icon={faAt} size=\"3x\" />\n              witter\n            </span>\n          </div>\n\n          <Card>\n            {/* <CardHeader id=\"card-header\">\n              <strong>Login</strong>\n            </CardHeader> */}\n            <CardBody>\n              <AuthForm />\n            </CardBody>\n            <CardFooter>\n              <Button\n                block\n                name=\"google\"\n                className=\"mt-4\"\n                onClick={onSocialClick}\n              >\n                Continue with Google &nbsp;\n                <FontAwesomeIcon icon={faGoogle} />\n              </Button>\n              <Button\n                block\n                name=\"github\"\n                className=\"mb-4\"\n                onClick={onSocialClick}\n              >\n                Continue with Github &nbsp;&nbsp;\n                <FontAwesomeIcon icon={faGithub} />\n              </Button>\n            </CardFooter>\n          </Card>\n        </Col>\n      </div>\n    </>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { Collapse, Container, Navbar, NavbarToggler, Nav } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\nimport { authService } from '../fbInstance';\n\nconst Navigation = ({ userObj }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const history = useHistory();\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <Navbar color=\"dark\" dark expand=\"lg\" className=\"sticky-top\">\n        <Container>\n          <Link to=\"/\" className=\"text-white text-decoration-none\">\n            <FontAwesomeIcon icon={faAt} size=\"3x\" />\n            <span className=\"head\">witter</span>\n          </Link>\n          <NavbarToggler onClick={handleToggle} className=\"me-2\" />\n          <Collapse color=\"white\" isOpen={isOpen} navbar>\n            <Nav\n              className=\"ml-auto d-felx flex-direction-row justify-content-around nav-item\"\n              navbar\n            >\n              <Link to=\"/profile\" className=\"text-white text-decoration-none\">\n                <img\n                  src={userObj.photoURL}\n                  width=\"40px\"\n                  height=\"40px\"\n                  style={{ borderRadius: '50%' }}\n                />{' '}\n                &nbsp;\n                <b>{userObj.displayName}'s Profile</b>\n              </Link>\n\n              <b\n                className=\"logout\"\n                onClick={onLogOutClick}\n                style={{ color: 'white' }}\n              >\n                Log Out\n              </b>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\nexport default Navigation;\n","import React, { useState } from 'react';\nimport { storageService } from '../fbInstance';\nimport uuid from 'uuid/dist/v4';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [image, setImage] = useState('');\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onFileChange = e => {\n    const {\n      target: { files },\n    } = e;\n    const file = files[0];\n    const reader = new FileReader();\n    // This event occurs when the read file action finished\n    reader.onloadend = finishedevent => {\n      const {\n        target: { result },\n      } = finishedevent;\n      console.log(result, 'result');\n      setImage(result);\n    };\n    // Read file from specific URL\n    reader.readAsDataURL(file);\n  };\n\n  const imageClear = () => setImage('');\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    let imageUrl = '';\n    if (image !== '') {\n      // store attachment in the fire storage\n      const imageRef = storageService\n        .ref()\n        .child(`${userObj.uid}-profile/${uuid()}`);\n      const response = await imageRef.putString(image, 'data_url');\n      console.log(response);\n      imageUrl = await response.ref.getDownloadURL();\n    }\n    console.log(userObj.photoURL, 'photoURL');\n    // console.log(userObj.photoURL.search('.com'), '진위여부');\n\n    if (userObj.displayName !== newDisplayName || image) {\n      if (imageUrl !== '') {\n        if (\n          userObj.photoURL !== null &&\n          userObj.photoURL.search('firebase') > 0\n        ) {\n          await storageService.refFromURL(userObj.photoURL).delete();\n        }\n        console.log('이미지', imageUrl);\n        await userObj.updateProfile({\n          displayName: newDisplayName,\n          photoURL: imageUrl,\n        });\n      } else {\n        await userObj.updateProfile({\n          displayName: newDisplayName,\n        });\n      }\n      refreshUser();\n    }\n  };\n\n  // const getMyMessages = async () => {\n  //   const messages = await dbService\n  //     .collection('aweets')\n  //     .where('creatorId', '==', userObj.uid)\n  //     .orderBy('createdAt', 'desc')\n  //     .get();\n  //   console.log(\n  //     messages.docs.map(doc => doc.data()),\n  //     'messages'\n  //   );\n  // };\n\n  // useEffect(() => {\n  //   getMyMessages();\n  // }, []);\n\n  return (\n    <>\n      <div className=\"profile-container\">\n        <form onSubmit={onSubmit} className=\"profile\">\n          <div className=\"image\">\n            {image ? (\n              <div id=\"image\">\n                <img\n                  src={image}\n                  width=\"100px\"\n                  height=\"100px\"\n                  style={{ borderRadius: '50%' }}\n                  className=\"new-image\"\n                />\n                <span onClick={imageClear}>\n                  Remove &nbsp;\n                  <FontAwesomeIcon icon={faTimes} className=\"clear-icon\" />\n                </span>\n              </div>\n            ) : (\n              <div>\n                <img\n                  src={userObj.photoURL}\n                  width=\"100px\"\n                  height=\"100px\"\n                  style={{ borderRadius: '50%' }}\n                />\n              </div>\n            )}\n          </div>\n\n          <input\n            type=\"text\"\n            placeholder=\"Display Name\"\n            value={newDisplayName}\n            onChange={onChange}\n          />\n          <label for=\"image-add\" className=\"image-add-label\">\n            <span>Change photo</span>\n            <FontAwesomeIcon icon={faPlus} style={{ marginLeft: '10px' }} />\n          </label>\n          <input\n            id=\"image-add\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n            className=\"file-input\"\n          />\n          <input type=\"submit\" value=\"Update\" className=\"update-button\" />\n        </form>\n      </div>\n    </>\n  );\n};\nexport default Profile;\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Home from '../routes/Home';\nimport Auth from '../routes/Auth';\nimport { Container } from 'reactstrap';\nimport Navigation from './Navigation';\nimport Profile from '../routes/Profile';\n\nconst AppRouter = ({ isLoggedIn, refreshUser, userObj }) => {\n  const withProps = (Component, props) => {\n    return matchProps => {\n      return <Component {...props} {...matchProps} />;\n    };\n  };\n\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <div id=\"container\">\n        <Container id=\"main-body\">\n          <Switch>\n            {isLoggedIn ? (\n              <>\n                <Route\n                  path=\"/\"\n                  exact\n                  component={withProps(Home, { userObj: userObj })}\n                />\n                <Route\n                  path=\"/profile\"\n                  exact\n                  component={withProps(Profile, {\n                    userObj: userObj,\n                    refreshUser: refreshUser,\n                  })}\n                />\n                {/* <Redirect from=\"*\" to=\"/\" /> */}\n              </>\n            ) : (\n              <>\n                <Route path=\"/\" exact component={Auth} />\n                <Redirect from=\"*\" to=\"/\" />\n              </>\n            )}\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst Footer = () => {\r\n  const thisYear = () => {\r\n    const year = new Date().getFullYear();\r\n    return year;\r\n  };\r\n\r\n  return (\r\n    <div id=\"main-footer\" className=\"text-center p-4\">\r\n      <Row>\r\n        <Col>\r\n          <p>\r\n            Copyright &copy; <span>{thisYear()}</span> Awitter\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport { authService } from '../fbInstance';\n\nimport Footer from './Footer';\n\nexport default () => {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        console.log(user);\n        // setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photoURL: user.photoURL,\n          updateProfile: args => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n        // setIsLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      updateProfile: args => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          refreshUser={refreshUser}\n          userObj={userObj}\n        />\n      ) : (\n        'Initializing....'\n      )}\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/scss/base.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}